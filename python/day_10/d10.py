import math

with open('python\day_10\d10_input.tx', 'r') as file:
    lines = file.read().splitlines()

cycle_counter = 0
current_value = 1

interested_cycles = {
    40: [
        '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?',
        '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?',
        '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?'
    ],
    80: [
        '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?',
        '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?',
        '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?'
    ],
    120: [
        '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?',
        '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?',
        '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?'
    ],
    160: [
        '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?',
        '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?',
        '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?'
    ],
    200: [
        '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?',
        '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?',
        '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?'
    ],
    240: [
        '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?',
        '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?',
        '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?', '?'
    ],
}


def step_cycle():
    global cycle_counter
    global current_value
    cycle_counter = cycle_counter + 1

    current_20 = math.ceil(cycle_counter / 40) * 40
    current_pos = (cycle_counter - 1) % 40
    interested_cycles[current_20][current_pos] = '#' if abs(
        current_value - current_pos) <= 1 else ' '


for line in lines:
    params = line.split(' ')
    command = params[0]
    value = int(params[1]) if len(params) > 1 else None

    if command == 'noop':
        step_cycle()
    elif command == 'addx':
        step_cycle()
        step_cycle()
        current_value += value

for key, value in interested_cycles.items():
    print(f'{key}\t', ''.join(value))
